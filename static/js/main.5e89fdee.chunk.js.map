{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","total","perPage","currentPage","onPageChange","pagesAmount","Math","ceil","pages","isPageFirst","isPageLast","i","push","className","classNames","disabled","href","onClick","map","page","active","items","from","to","numbers","n","getNumbers","App","useState","itemsPerPage","setItemsPerPage","setCurrentPage","displayedItems","slice","firstItem","lastItem","length","id","value","onChange","event","Number","target","htmlFor","ReactDOM","render","document","getElementById"],"mappings":"oNASaA,EAA8B,SAAC,GAW1C,IANK,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAcC,KAAKC,KAAKN,EAAQC,GAChCM,EAAkB,GAClBC,EAA8B,IAAhBN,EACdO,EAAaP,IAAgBE,EAE1BM,EAAI,EAAGA,GAAKN,EAAaM,GAAK,EACrCH,EAAMI,KAAKD,GAeb,OACE,qBAAIE,UAAU,aAAd,UACE,oBAAIA,UAAWC,IAAW,YAAa,CAAEC,SAAUN,IAAnD,SACE,mBACE,UAAQ,WACRI,UAAU,YACVG,KAAK,QACL,gBAAeP,EACfQ,QApBe,WAChBR,GACHL,EAAaD,EAAc,IAazB,oBAUDK,EAAMU,KAAI,SAAAC,GAAI,OACb,oBACEN,UAAWC,IACT,YACA,CAAEM,OAAQD,IAAShB,IAHvB,SAOE,mBACE,UAAQ,WACRU,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,kBAAMb,EAAae,IAJ9B,SAMGA,KAREA,MAaT,oBAAIN,UAAWC,IAAW,YACxB,CAAEC,SAAUL,IADd,SAGE,mBACE,UAAQ,WACRG,UAAU,YACVG,KAAK,QACL,gBAAeN,EACfO,QA9Ce,WAChBP,GACHN,EAAaD,EAAc,IAuCzB,wBCjEFkB,ECNC,SAAoBC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQZ,KAAKa,GAGf,OAAOD,EDDKE,CAAW,EAAG,IACzBR,KAAI,SAAAO,GAAC,gBAAOA,MAEFE,EAAgB,WAC3B,MAAwCC,mBAAS,GAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAsCF,mBAAS,GAA/C,mBAAOzB,EAAP,KAAoB4B,EAApB,KAEMC,EAAiBX,EAAMY,MAC3BJ,GAAgB1B,EAAc,GAC9B0B,EAAgB1B,GAEZ+B,EAAYF,EAAe,GAC3BG,EAAWH,EAAeA,EAAeI,OAAS,GAOxD,OACE,sBAAKvB,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWV,EADX,mBACiC+B,EADjC,cACgDC,EADhD,eAC+Dd,EAAMe,OADrE,OAIA,sBAAKvB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRwB,GAAG,kBACHxB,UAAU,eACVyB,MAAOT,EACPU,SApBuB,SAACC,GAChCV,EAAgBW,OAAOD,EAAME,OAAOJ,QACpCP,EAAe,IAaT,UAOE,wBAAQO,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOK,QAAQ,kBAAkB9B,UAAU,qBAA3C,+BAIF,cAAC,EAAD,CACEZ,MAAOoB,EAAMe,OACblC,QAAS2B,EACT1B,YAAaA,EACbC,aAAc2B,IAEhB,6BACGC,EAAed,KAAI,SAAAO,GAAC,OACnB,oBACE,UAAQ,OADV,wBAIWA,IAJX,UAEUA,aE5DpBmB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.5e89fdee.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\n\ntype Props = {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (page: number) => void;\n};\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const pagesAmount = Math.ceil(total / perPage);\n  const pages: number[] = [];\n  const isPageFirst = currentPage === 1;\n  const isPageLast = currentPage === pagesAmount;\n\n  for (let i = 1; i <= pagesAmount; i += 1) {\n    pages.push(i);\n  }\n\n  const handlePrevPage = () => {\n    if (!isPageFirst) {\n      onPageChange(currentPage - 1);\n    }\n  };\n\n  const handlelastPage = () => {\n    if (!isPageLast) {\n      onPageChange(currentPage + 1);\n    }\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li className={classNames('page-item', { disabled: isPageFirst })}>\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={isPageFirst}\n          onClick={handlePrevPage}\n        >\n          «\n        </a>\n      </li>\n      {pages.map(page => (\n        <li\n          className={classNames(\n            'page-item',\n            { active: page === currentPage },\n          )}\n          key={page}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${page}`}\n            onClick={() => onPageChange(page)}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n\n      <li className={classNames('page-item',\n        { disabled: isPageLast })}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={isPageLast}\n          onClick={handlelastPage}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { ChangeEvent, useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `${n}`);\n\nexport const App: React.FC = () => {\n  const [itemsPerPage, setItemsPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const displayedItems = items.slice(\n    itemsPerPage * (currentPage - 1),\n    itemsPerPage * (currentPage),\n  );\n  const firstItem = displayedItems[0];\n  const lastItem = displayedItems[displayedItems.length - 1];\n\n  const handleItemsAmountPerPage = (event: ChangeEvent<HTMLSelectElement>) => {\n    setItemsPerPage(Number(event.target.value));\n    setCurrentPage(1);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${firstItem} - ${lastItem} of ${items.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={itemsPerPage}\n            onChange={handleItemsAmountPerPage}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n      <Pagination\n        total={items.length}\n        perPage={itemsPerPage}\n        currentPage={currentPage}\n        onPageChange={setCurrentPage}\n      />\n      <ul>\n        {displayedItems.map(n => (\n          <li\n            data-cy=\"item\"\n            key={`${n}`}\n          >\n            {`Item ${n}`}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}